"""empty message

Revision ID: b7d8419be490
Revises: 
Create Date: 2023-10-18 09:00:16.315675

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b7d8419be490'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('car_data', schema=None) as batch_op:
        batch_op.alter_column('model_id',
               existing_type=sa.BIGINT(),
               nullable=False,
               autoincrement=True)

    with op.batch_alter_table('car_images', schema=None) as batch_op:
        batch_op.alter_column('association_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('attribution_text')
        batch_op.drop_column('web_image_url')

    with op.batch_alter_table('user_car_association', schema=None) as batch_op:
        batch_op.drop_constraint('user_car_association_user_id_model_id_key', type_='unique')
        batch_op.create_foreign_key(None, 'car_data', ['model_id'], ['model_id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('users_email_key', type_='unique')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_unique_constraint('users_email_key', ['email'])

    with op.batch_alter_table('user_car_association', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_unique_constraint('user_car_association_user_id_model_id_key', ['user_id', 'model_id'])

    with op.batch_alter_table('car_images', schema=None) as batch_op:
        batch_op.add_column(sa.Column('web_image_url', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('attribution_text', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.alter_column('association_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('car_data', schema=None) as batch_op:
        batch_op.alter_column('model_id',
               existing_type=sa.BIGINT(),
               nullable=True,
               autoincrement=True)

    # ### end Alembic commands ###
